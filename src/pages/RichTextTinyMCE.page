<apex:page lightningStylesheets="true">
    
    <apex:includeScript value="{!URLFOR($Resource.jquery_3_4_0_min_js)}"/>
    <apex:includeScript value="{!URLFOR($Resource.TinyMCE, 'tinymce/js/tinymce/tinymce.min.js')}"/> 
    <style>
        .ToggleBtn{
        appearance: button;
        -moz-appearance: button;
        -webkit-appearance: button;
        text-decoration: none;
        font: menu;
        color: aquaButtonText;
        display: inline-block;padding: 2px 8px;
        background-color: #CFEEF8;
        cursor: pointer;
        }
    </style>
    <div id="knowledgeDiv" style="padding-right: 1px;">
            
        <apex:form >
        <!--
            <div>
                <a  class="ToggleBtn" onclick="tinymce.execCommand('mceToggleEditor',false,'content');">
                    <span>Toggle HTML/TEXT</span>
                </a>
            </div>
            -->
            <textarea id="content1" name="content" style="width:100%;height:20rem;" class="mceEditor"></textarea>
        </apex:form>
    </div>
    
    <!--this is the initialization required for TINYMCE  -->
    <script type="text/javascript">
    
	    var parentHostName = '{!$CurrentPage.parameters.parentHostName}';
	   
	    tinyMCE.init({
	        mode : "specific_textareas",
	        editor_selector : "mceEditor",
	        plugins : "advlist,anchor,autolink,autosave,bbcode,charmap,code,codesample,colorpicker,contextmenu,directionality,emoticons,fullpage,fullscreen,help,hr,image,imagetools,importcss,insertdatetime,legacyoutput,link,lists,media,nonbreaking,noneditable,pagebreak,paste,preview,print,save,searchreplace,spellchecker,tabfocus,table,template,textcolor,textpattern,toc,visualblocks,visualchars,wordcount",
	        menubar: false,
	        toolbar: "formatselect fontselect fontsizeselect | bold italic underline strikethrough | forecolor backcolor | bullist numlist outdent indent | alignleft aligncenter alignright alignjustify | removeformat image",
	    	width: "100%",
	    	height : "20rem",
	    	init_instance_callback: function (editor) {
			    editor.on('Change', function (e) {
			    	console.log("visualforece contentBody: " + tinymce.get('content1').getContent());
			      	parent.postMessage(tinymce.get('content1').getContent(), parentHostName);
			    });
			}
	    });

    </script>
    
    <script>
        var lastDivHeight = 0;
        var parentHostName = '{!$CurrentPage.parameters.parentHostName}';
        $(window).on( "load", function() {
            //sendPageHeight();
            setBody();
        });

        function sendPageHeight(){
            if(parentHostName != null && parentHostName != ''){
                if(lastDivHeight != $("#knowledgeDiv").height()){
                    lastDivHeight = $("#knowledgeDiv").height();
                    if(lastDivHeight<485){
                        lastDivHeight=485;
                    }
                    parent.postMessage(lastDivHeight, parentHostName);
                }
            }
        }

        function setBody(){
        	var body = '{!$CurrentPage.parameters.contentBody}';
        	console.log("----- vp body: " + body);
			tinymce.activeEditor.selection.setContent(decodeURI(body || ""));
        }
    </script>
    
</apex:page>