<apex:page lightningStylesheets="true">
    
    <apex:includeScript value="{!URLFOR($Resource.jquery_3_4_0_min_js)}"/>
    <apex:includeScript value="{!URLFOR($Resource.TinyMCE, 'tinymce/js/tinymce/tinymce.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.FontAwesome,'/fontawesome-free-5.8.1-web/css/all.css')}"/>

    <style>
        .tox .tox-statusbar{
	        height: 0px !important;
        }

        i.mce-i-customImage:before {   // FONT-AWESOME-CLASSNAME e.g. "icon-youtube"
		    content: "\f03e";       // FONT-AWESOME-CONTENT e.g. "\f166"
		    font-family: FontAwesome;
		    font-style: normal;
		    font-weight: normal;
		    text-decoration: inherit;
		    color: #000;
		    font-size: 1.5em;
		    padding-right: 0.5em;
		    position: absolute;
		    top: 15%;
		    left: 0;
		 }
    </style>
    <div id="knowledgeDiv" style="padding-right: 1px;">
            
        <apex:form >
            <textarea id="content1" name="content" style="width:100%;height:20rem;" class="mceEditor"></textarea>
        </apex:form>
    </div>
    
    <!--this is the initialization required for TINYMCE  -->
    <script type="text/javascript">
    
	    var parentHostName = '{!$CurrentPage.parameters.parentHostName}';

	    
		tinymce.init({
		  	mode : "specific_textareas",
			menubar: false,
			content_css: '{!URLFOR($Resource.FontAwesome,'/fontawesome-free-5.8.1-web/css/all.css')}',
			plugins: "fullpage",
		  	selector: 'textarea#content1',
		  	toolbar: 'formatselect fontselect fontsizeselect | bold italic underline strikethrough | forecolor backcolor | bullist numlist outdent indent | alignleft aligncenter alignright alignjustify | removeformat image customImage code',
		  	width: "100%",
			height : "20rem",
		  	init_instance_callback: function (editor) {
			    editor.on('Change', function (e) {
			    	console.log("visualforce contentBody: " + tinymce.get('content1').getContent());

			      	parent.postMessage({event 	: "contentchange",
			      						data	: tinymce.get('content1').getContent()}, 
			      						parentHostName);
			    });
			},
		  	setup: function (editor) {
				editor.ui.registry.addButton('customImage', {
			      	text: 'Add Image',
			      	classes: 'mce-i-customImage', 
			      	onAction: function (_) {
			      		parent.postMessage({event 	: "showimageselector"}, 
			      						parentHostName);
			        //editor.insertContent('&nbsp;<strong>It\'s my button!</strong>&nbsp;');
			      	}
		    	});
		  	}
		});


    </script>
    
    <script>
        var lastDivHeight = 0;
        var parentHostName = '{!$CurrentPage.parameters.parentHostName}';

        window.addEventListener("message", function(event){
        	if (event.origin == parentHostName) {
        		var parameters = event.data;
	            console.log("message visulforce handler: " + JSON.stringify(parameters));
	            switch(parameters.event){
            		case "contentchange":
            			setBody(parameters.data);
            			break;
            		case "insertimage":
            			insertImage(parameters.data);
            			break;
            	}
	        }
        }, false);

        function insertImage(url){
	        console.log("insertImage: " + url);
        	tinymce.activeEditor.insertContent('<img src="' + url + '" />');
	        console.log("insertImage end");
        }

        function setBody(body){
			tinymce.activeEditor.setContent(body || "");
        }
    </script>
    
</apex:page>